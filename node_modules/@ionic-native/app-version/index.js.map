{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/app-version/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,OAAO,EAAE,iBAAiB,EAAE,MAAM,EAAE,MAAM,oBAAoB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;IAmCxC,8BAAiB;;;;IAE/C;;;OAGG;;;;;IAEH,+BAAU;;;;kBAAsB,MAAM,CAAC,EAAE;IAEzC;;;OAGG;;;;;IAEH,mCAAc;;;;kBAAsB,MAAM,CAAC,EAAE;IAE7C;;;;;OAKG;;;;;;;IAEH,mCAAc;;;;;;kBAA+B,MAAM,CAAC,EAAE;IAEtD;;;OAGG;;;;;IAEH,qCAAgB;;;;kBAAsB,MAAM,CAAC,EAAE;;gBA/BhD,UAAU;;;QAOR,OAAO,EAAE;;;;gDAC+B;;QAMxC,OAAO,EAAE;;;;oDACmC;;QAQ5C,OAAO,EAAE;;;;oDAC4C;;QAMrD,OAAO,EAAE;;;;sDACqC;;;;;;;;;;;;;;;;;;;;;;;;IA9BpC,UAAU;QARtB,MAAM,CAAC;YACN,UAAU,EAAE,YAAY;YACxB,MAAM,EAAE,4BAA4B;YACpC,SAAS,EAAE,uBAAuB;YAClC,IAAI,EAAE,4DAA4D;YAClE,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,EAAE,SAAS,CAAC;SACzC,CAAC;OAEW,UAAU,EAgCtB;qBApED;EAoCgC,iBAAiB;SAApC,UAAU","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n\n\n\n/**\n * @name App Version\n * @description\n * Reads the version of your app from the target build settings.\n *\n * Requires Cordova plugin: `cordova-plugin-app-version`. For more info, please see the [Cordova App Version docs](https://github.com/whiteoctober/cordova-plugin-app-version).\n *\n * @usage\n * ```typescript\n * import { AppVersion } from '@ionic-native/app-version';\n *\n * constructor(private appVersion: AppVersion) { }\n *\n * ...\n *\n *\n * this.appVersion.getAppName();\n * this.appVersion.getPackageName();\n * this.appVersion.getVersionCode();\n * this.appVersion.getVersionNumber();\n *\n * ```\n */\n@Plugin({\n  pluginName: 'AppVersion',\n  plugin: 'cordova-plugin-app-version',\n  pluginRef: 'cordova.getAppVersion',\n  repo: 'https://github.com/whiteoctober/cordova-plugin-app-version',\n  platforms: ['Android', 'iOS', 'Windows']\n})\n@Injectable()\nexport class AppVersion extends IonicNativePlugin {\n\n  /**\n   * Returns the name of the app, e.g.: \"My Awesome App\"\n   * @returns {Promise<string>}\n   */\n  @Cordova()\n  getAppName(): Promise<string> { return; }\n\n  /**\n   * Returns the package name of the app, e.g.: \"com.example.myawesomeapp\"\n   * @returns {Promise<string>}\n   */\n  @Cordova()\n  getPackageName(): Promise<string> { return; }\n\n  /**\n   * Returns the build identifier of the app.\n   * In iOS a string with the build version like \"1.6095\"\n   * In Android a number generated from the version string, like 10203 for version \"1.2.3\"\n   * @returns {Promise<string | number>}\n   */\n  @Cordova()\n  getVersionCode(): Promise<string | number> { return; }\n\n  /**\n   * Returns the version of the app, e.g.: \"1.2.3\"\n   * @returns {Promise<string>}\n   */\n  @Cordova()\n  getVersionNumber(): Promise<string> { return; }\n\n}\n"]}