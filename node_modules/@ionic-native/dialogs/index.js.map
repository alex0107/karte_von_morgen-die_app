{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/dialogs/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,OAAO,EAAE,iBAAiB,EAAE,MAAM,EAAE,MAAM,oBAAoB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;IA8C3C,2BAAiB;;;;IAC5C;;;;;;OAMG;;;;;;;;IAKH,uBAAK;;;;;;;cAAC,OAAe,EAAE,KAAc,EAAE,UAAmB;QACxD,MAAM,CAAC;KACR;IAED;;;;;;OAMG;;;;;;;;IAKH,yBAAO;;;;;;;cACL,OAAe,EACf,KAAc,EACd,YAAuB;QAEvB,MAAM,CAAC;KACR;IAED;;;;;;;OAOG;;;;;;;;;IAKH,wBAAM;;;;;;;;cACJ,OAAgB,EAChB,KAAc,EACd,YAAuB,EACvB,WAAoB;QAEpB,MAAM,CAAC;KACR;IAED;;;OAGG;;;;;IAIH,sBAAI;;;;cAAC,KAAa,KAAU;;gBAhE7B,UAAU;;;QASR,OAAO,CAAC;YACP,YAAY,EAAE,CAAC;YACf,UAAU,EAAE,CAAC;SACd,CAAC;;;;wCAGD;;QASA,OAAO,CAAC;YACP,YAAY,EAAE,CAAC;YACf,UAAU,EAAE,CAAC;SACd,CAAC;;;;0CAOD;;QAUA,OAAO,CAAC;YACP,YAAY,EAAE,CAAC;YACf,UAAU,EAAE,CAAC;SACd,CAAC;;;;yCAQD;;QAMA,OAAO,CAAC;YACP,IAAI,EAAE,IAAI;SACX,CAAC;;;;uCAC0B;;;;;;;;;;;;;;;;;;;;;;;;;IA/DjB,OAAO;QARnB,MAAM,CAAC;YACN,UAAU,EAAE,SAAS;YACrB,MAAM,EAAE,wBAAwB;YAChC,SAAS,EAAE,wBAAwB;YACnC,IAAI,EAAE,kDAAkD;YACxD,SAAS,EAAE,CAAC,gBAAgB,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,CAAC;SACtE,CAAC;OAEW,OAAO,EAgEnB;kBA/GD;EA+C6B,iBAAiB;SAAjC,OAAO","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n\nexport interface DialogsPromptCallback {\n  /**\n   * The index of the pressed button. (Number) Note that the index uses one-based indexing, so the value is 1, 2, 3, etc.\n   */\n  buttonIndex: number;\n\n  /**\n   * The text entered in the prompt dialog box. (String)\n   */\n  input1: string;\n}\n\n/**\n * @name Dialogs\n * @description\n * This plugin gives you ability to access and customize the device native dialogs.\n *\n * Requires Cordova plugin: `cordova-plugin-dialogs`. For more info, please see the [Dialogs plugin docs](https://github.com/apache/cordova-plugin-dialogs).\n *\n * @usage\n * ```typescript\n * import { Dialogs } from '@ionic-native/dialogs';\n *\n * constructor(private dialogs: Dialogs) { }\n *\n * ...\n *\n * this.dialogs.alert('Hello world')\n *   .then(() => console.log('Dialog dismissed'))\n *   .catch(e => console.log('Error displaying dialog', e));\n *\n *\n * ```\n * @interfaces\n * DialogsPromptCallback\n */\n@Plugin({\n  pluginName: 'Dialogs',\n  plugin: 'cordova-plugin-dialogs',\n  pluginRef: 'navigator.notification',\n  repo: 'https://github.com/apache/cordova-plugin-dialogs',\n  platforms: ['Amazon Fire OS', 'Android', 'Browser', 'iOS', 'Windows']\n})\n@Injectable()\nexport class Dialogs extends IonicNativePlugin {\n  /**\n   * Shows a custom alert or dialog box.\n   * @param {string} message Dialog message.\n   * @param {string} [title] Dialog title. (Optional, defaults to Alert)\n   * @param {string} [buttonName] Button name. (Optional, defaults to OK)\n   * @returns {Promise<any>} Returns a blank promise once the user has dismissed the alert.\n   */\n  @Cordova({\n    successIndex: 1,\n    errorIndex: 4\n  })\n  alert(message: string, title?: string, buttonName?: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Displays a customizable confirmation dialog box.\n   * @param {string} message Dialog message.\n   * @param {string} [title] Dialog title. (Optional, defaults to Confirm)\n   * @param {Array<string>} [buttonLabels] Array of strings specifying button labels. (Optional, defaults to [OK,Cancel])\n   * @returns {Promise<number>} Returns a promise that resolves the button index that was clicked, or 0 if the user has dismissed the dialog by clicking outside the dialog box. Note that the index use one-based indexing.\n   */\n  @Cordova({\n    successIndex: 1,\n    errorIndex: 4\n  })\n  confirm(\n    message: string,\n    title?: string,\n    buttonLabels?: string[]\n  ): Promise<number> {\n    return;\n  }\n\n  /**\n   * Displays a native dialog box that is more customizable than the browser's prompt function.\n   * @param {string} [message] Dialog message.\n   * @param {string} [title] Dialog title. (Optional, defaults to Prompt)\n   * @param {Array<string>} [buttonLabels]  Array of strings specifying button labels. (Optional, defaults to [\"OK\",\"Cancel\"])\n   * @param {string} [defaultText] Default text box input value.  (Optional, Default: empty string)\n   * @returns {Promise<DialogsPromptCallback>} Returns a promise that resolves an object with the button index clicked and the text entered\n   */\n  @Cordova({\n    successIndex: 1,\n    errorIndex: 5\n  })\n  prompt(\n    message?: string,\n    title?: string,\n    buttonLabels?: string[],\n    defaultText?: string\n  ): Promise<DialogsPromptCallback> {\n    return;\n  }\n\n  /**\n   * The device plays a beep sound.\n   * @param {numbers} times The number of times to repeat the beep.\n   */\n  @Cordova({\n    sync: true\n  })\n  beep(times: number): void {}\n}\n"]}